#!/usr/bin/env python

import paramiko

import typing
import argparse
import platform
import subprocess
import functools
import os

host = ''
user_name = 'pi'
service = '2468.service'
wd = '~/realsense-offseason'

deploy_map = {
    'src': wd,
    'deploy': wd,
}



def print_cmd(cmd: list[str]):
    print(functools.reduce(lambda a, b: a + ' ' + b, cmd))


def run_ssh_cmds(cmds: list[str]) -> list[str]:
    ssh_client = paramiko.SSHClient()
    ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh_client.connect(hostname=host, username=user_name)

    outs = []

    for cmd in cmds:
        stdin, stdout, stderr = ssh_client.exec_command(cmd)
        out = stdout.read().decode().strip()
        error = stderr.read().decode().strip()
        if error:
            raise Exception(''.format(error))
        outs.append(out)

    ssh_client.close()

    return outs


def deploy():
    system = platform.system()

    if system == 'Linux':
        dn = os.path.dirname(os.path.realpath(__file__))
        for dir, r_dir in deploy_map.items():
            cmd = ['rsync', '-avP', os.path.join(dn, '..', dir), user_name + '@' + host + ':' + r_dir]
            print_cmd(cmd)
            subprocess.run(cmd)

    elif system == 'Windows':
        # import pysftp

        # sftp = pysftp.Connection(host, username=user_name, password='2468')
        # for directory in rsync_map.keys():
        #     if sftp.exists('/home/cflew/realsense-offseason/' + directory):
        #         sftp.execute('rm -rf' + ' /home/cflew/realsense-offseason/' + directory)
        #     sftp.mkdir('/home/cflew/realsense-offseason/' + directory)
        #     sftp.chdir('/home/cflew/realsense-offseason/' + directory)
        #     sftp.put_d(os.path.join("..", directory), "")
        # sftp.close()
        raise Exception('Platform not supported')
    else:
        raise Exception('Platform not supported')


def get():
    system = platform.system()

    if system == 'Windows':
        dn = os.path.dirname(os.path.realpath(__file__))
        sftp = pysftp.Connection(host, username=user_name, password='2468')
        sftp.chdir('/home/cflew/realsense-offseason/out')
        sftp.get_d('.', os.path.join(dn, '..', 'out'))


def restart():
    run_ssh_cmds(['systemctl restart ' + service])


def run():
    deploy()
    restart()


def set_as_startup():
    run_ssh_cmds(['systemctl enable ' + service])


def unset_as_startup():
    run_ssh_cmds(['systemctl disable ' + service])


def clean():
    run_ssh_cmds(['rm -rf ' + wd])


def update_deps():
    venv_bin = wd + '/venv/bin/activate'
    run_ssh_cmds(['source ' + venv_bin,
                  'pip install -r requirements.txt'])


cmd_map = {
    'deploy': deploy,
    'restart': restart,
    'run': run,
    'update_deps': update_deps,
    'clean': clean,
    'set_as_startup': set_as_startup,
    'unset_as_startup': unset_as_startup,
    'get': get,
}


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('subcommand', type=str)
    parser.add_argument('-a', '--address', type=str, help='Address of the remote machine')
    args = parser.parse_args()

    host = args.address

    func = cmd_map[args.subcommand]
    func()


if __name__ == '__main__':
    main()
